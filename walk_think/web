该文件取名web,对于我来说，想要的是学更多，虽然对前端有点兴趣，但也接触了点后端，(于2017、05、08,)

前端：
最近学了VUE，感觉，要用起来是没多大问题的，关键还是用来干嘛，



后端：

node.js:

HEXO：
之前解除了hexo,由于不懂前端（html,CSS,js),也就仅仅是跑了个Hello wrold,
2017、05、12：
前几天试跑了下hexo,本地访问不了，由于没时间，就没继续弄了，今天上网查了下，可能是端口占用的问题，然后试了如下命令：
hexo s -p 5000
就可以访问了，

HEXO命令：
建站：

init
$ hexo init [folder]
新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。

new
$ hexo new [layout] <title>
新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。


generate
$ hexo generate
生成静态文件。

选项	描述
-d, --deploy	文件生成后立即部署网站
-w, --watch	监视文件变动
该命令可以简写为

$ hexo g


server
$ hexo server
启动服务器。默认情况下，访问网址为： http://localhost:4000/。

选项	描述
-p, --port	重设端口
-s, --static	只使用静态文件
-l, --log	启动日记记录，使用覆盖记录格式

deploy
$ hexo deploy
部署网站。

参数	描述
-g, --generate	部署之前预先生成静态文件
该命令可以简写为：

$ hexo d


你可以执行下列命令来创建一篇新文章。

$ hexo new [layout] <title>
您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。

2017/06/26：
	hexo的作用：就是把用markdown写的文章，转换成有一定主题的html文件，然后再发布到GitHub，这对于想建立独立博客，又不懂html,CSS,JS的人来说，是很有用的，
	如果web开发的话，又要在github托管，感觉用hexo，

python:
到现在学了点flask,



要干嘛呢，做点什么？？

前段时间看到过一个flask做的空气检测项目，这也是我感兴趣的，从这个开始学习？
项目GitHub（https://github.com/ypwhs/PM2.5.git）

170614：开始
在Nanopi M1上接了个温湿度传感器，并且安装了i2c-tools（apt-get install i2c-tools）测试，先写个传感器相关的吧，
安装了setuptools,pip3,virtualenv

i2cdetect -y 0检测i2c0下的传感器，
170617：
调通了HTU21D驱动，获取传感器数据的方式是：先写触发命令（触发检测温度或湿度），然后直接读取三个字节，前两个是数据，第三个是CRC(CRC8)checksum ,对这3个字节进场CRC8计算结果0（还没看文档确认）
然后，想在C代码中实现Sqlite，将传感器数据保存为sqlite，然后给python,缺点是不能有实时数据，

由于保存数据需要时间，可是板子上的时间有不对，因此需要调整，最简单的是跟网络同步：
apt-get install ntpdate
同步时间：ntpdate  0.cn.pool.ntp.org
修改时区：cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
查看时间：date
Linux C 获取时间代买：
　　time_t   now;         //实例化time_t结构
　　struct   tm     *timenow;         //实例化tm结构指针
　　time(&now);
　　//time函数读取现在的时间(国际标准时间非北京时间)，然后传值给now
　　timenow   =   localtime(&now);
　　//localtime函数把从time取得的时间now换算成你电脑中的时间(就是你设置的地区)
　　printf("Local   time   is   %s/n",asctime(timenow));
这段代码获取的时间是字符串，并且格式是：星期+空格+月份+空格+日+空格+时：分：秒+空格 + 年，如：“Sat Jun 17 15:09:07 2017”，因此还需要处理，或者直接使用



sqlite3:
要使用sqlite3,就要懂SQL语句，

		可以把 SQL 分为两个部分：数据操作语言 (DML) 和 数据定义语言 (DDL)。
		SQL (结构化查询语言)是用于执行查询的语法。但是 SQL 语言也包含用于更新、插入和删除记录的语法。
		查询和更新指令构成了 SQL 的 DML 部分：
			SELECT - 从数据库表中获取数据
			UPDATE - 更新数据库表中的数据
			DELETE - 从数据库表中删除数据
			INSERT INTO - 向数据库表中插入数据
		SQL 的数据定义语言 (DDL) 部分使我们有能力创建或删除表格。我们也可以定义索引（键），规定表之间的链接，以及施加表间的约束。
		SQL 中最重要的 DDL 语句:
			CREATE DATABASE - 创建新数据库
			ALTER DATABASE - 修改数据库
			CREATE TABLE - 创建新表
			ALTER TABLE - 变更（改变）数据库表
			DROP TABLE - 删除表
			CREATE INDEX - 创建索引（搜索键）
			DROP INDEX - 删除索引
PS：摘自：http://www.w3school.com.cn/sql/sql_syntax.asp

问题：
如何获取数据库信息：1、是否为空；2、是否有table,
如果数据库中没有table，执行INSERT INTO指令会怎样？
如果数据库中已经有了table,再次执行CREATE TABLE会怎样？


sqlite使用：
1、如果sqlite3文件中没有table,执行INSERT INTO会出“ no such table”错误
2、如果sqlite3文件中已经有了table，再执行INSERT INTO会出现“ table HTU21D already exists”（HTU21D table名）

Linux sqlite3:

linux c添加sqlite库：apt-get install libsqlite3-dev  

Linux C编译时要添加-l sqlite3选项
gcc HTU21.c -o HTU21D  -l sqlite3

20170618:
Log:
	昨天写了个读取HTU21D数据并保存到sqlite3中的程序，虽然功能实现了，如果以后要一天24小时运行，如果出错了，怎么知道哪里出错了？
	可以添加log功能，运行过程中，把一些记录|过程保存到log文件中，
	目前发现两个比较有兴趣的（都是国人写的开源项目）：
	https://github.com/HardySimpson/zlog
	https://github.com/armink/EasyLogger

前端：





2017/06/26：（今天又接触到了“元问题”的思维方法，是不是可以学以致用呢？）
	解除了web这么久，终于对web开发有了个大概的了解，什么是动态网站、静态网站，前端、后端；php、python的作用，
	现在最大的问题是：我要做些什么？
	1、之前用python把chrome书签变为html文件，并托管在github上，有个很大的问题，就是不能对书签进行编辑，可以做个可以编辑的书签web page,
	方案：
		1、把bookmarks数据变为数据库，
		2、写一个读取、管理数据库web应用，
	2、flask+爬虫，问题是要爬什么数据呢？
		1、天气，PM2.5，
		2、大数据，数据分析，HTML5
		3、自己感兴趣的东西：
			有没漫画更新？美剧更新？
			做个自己的新闻聚合，把一些自己感兴趣的新闻更新的爬过来，或者自己经常逛的博客，有更新，


2017/06/28：
尝试了python调用C：（python3）
	把之前读取HTU21D的c代码，编译成so库，
	python使用ctypes 调用之前生存的so库，
	要点：
		1、调用so库的时候，注意路径，就是so库跟py文件是在同一个目录，也不能只给文件名，还有加上路径，
		2、传参，指针
	



2017/08/27：
一个用flask的例子：
https://github.com/shengxinjing/my_blog/issues/2